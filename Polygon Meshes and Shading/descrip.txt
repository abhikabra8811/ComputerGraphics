[ Abhishek Kabra ]
ITCS 6120 - Project 2

=============================================================================
This is a template description file.  Please fill in by replacing the []'s
with relevant content (write a *single* sentence description for each method,
bug, extension, etc...).  Then, remove any leftover []'s.
=============================================================================

Incomplete parts:
-----------------
  - none

Bugs in code:
-------------
  - none

Extensions/extra credit completed:
----------------------------------
  - Torus as a tesselated primitive
  - Offsetting filled polygons
  - Phong model
  - Vertex normals using short lines

================================================================

Methods completed or changed (Java and GLSL)
--------------------------------------------

Ellipsoid.java
- evalPosition(): compute ellipsoid position from u,v
- evalNormal():   compute ellipsoid normal vector from u,v

ellipsoid.vp (GLSL)
- ellipsoidPosition(): compute ellipsoid position from u,v
- ellipsoidNormal():   compute ellipsoid normal vector from u,v
- main()

illum.fp (GLSL)
- toonShade() : computed ligthing depending on values of diffuse and specular
- main() : lighting computations

PolyMesh.java
- computeAllNormals(): Computed normals for each polygon and vertices(weighted area average)

Shape.java
- draw(): call to drawPolygons, drawWireframe, drawSillhoutte and drawNoramals methods
- drawPolygons(): Polygons drawn based on smooth or flat shading
- drawWireframe(): Wireframs is drawing using GL_FRONT_AND_BACK and GL_LINE polygon mode

Shape.drawNormals(): computed short line in direction of normal and drawn
